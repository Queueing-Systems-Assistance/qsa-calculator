plugins {
  id 'java'
  id 'java-library'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'checkstyle'
}

ext {
  projectGroup = 'com.unideb.qsa'
  projectVersion = project.getProperties().get('release.version') ?: 'RELEASE.VERSION.UNKNOWN'
  /* Secrets */
  // Note: Use your username and token
  githubToken = System.getenv('GITHUB_TOKEN') ?: 'YOUR_TOKEN'
  githubUsername = System.getenv('GITHUB_USERNAME') ?: 'YOUR_USERNAME'
  print('Release version [' + projectVersion + ']')
}

allprojects {

  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'checkstyle'

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url 'https://jitpack.io'
    }
    maven {
      url 'https://maven.pkg.github.com/queueing-systems-assistance/qsa'
      credentials {
        username = githubUsername
        password = githubToken
      }
    }
  }

  dependencyManagement {
    dependencies {
      /* QSA */
      dependency 'com.unideb.qsa:qsa-config-domain:1.1.5'
      dependency 'com.unideb.qsa:qsa-config-resolver:1.1.3'
      /* DEPENDENCY */
      imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.6.1'
      }
      dependency 'com.amazonaws:aws-java-sdk-lambda:1.12.131'
      dependency 'com.google.guava:guava:31.0.1-jre'
      dependency 'io.cucumber:cucumber-java:7.1.0'
      dependency 'io.cucumber:cucumber-spring:7.1.0'
      dependency 'io.cucumber:cucumber-testng:7.1.0'
      dependency 'net.logstash.logback:logstash-logback-encoder:7.0.1'
      dependency 'io.micrometer:micrometer-registry-prometheus:1.8.1'
      dependency 'org.apache.commons:commons-math3:3.6.1'
      dependency 'org.mockito:mockito-core:4.2.0'
      dependency 'org.slf4j:jcl-over-slf4j:1.7.32'
      dependency 'org.slf4j:slf4j-api:1.7.32'
      dependency 'org.springframework:spring-context:5.3.14'
      dependency 'org.springframework.boot:spring-boot-starter-web:2.6.1'
      dependency 'org.springframework.boot:spring-boot-starter-webflux:2.6.1'
      dependency 'org.springframework.boot:spring-boot-starter-actuator:2.6.1'
      dependency 'org.springframework.boot:spring-boot-starter-test:2.6.1'
      dependency 'org.testng:testng:7.4.0'
    }
  }

  checkstyle {
    toolVersion = '9.2'
    configFile = file("${rootDir}/support/code-formatting/checkstyle/checkstyle.xml")
    configDirectory = file("${rootDir}/support/code-formatting/checkstyle/")
    showViolations = true
    ignoreFailures = false
  }

  group = projectGroup
  version = projectVersion
  sourceCompatibility = '17'

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  tasks.withType(Checkstyle) {
    reports {
      xml.enabled false
      html.enabled false
    }
  }

  test {
    useTestNG()
    scanForTestClasses = false
    testLogging {
      afterSuite { desc, result ->
        if (!desc.parent) {
          println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
      }
    }
  }
}
